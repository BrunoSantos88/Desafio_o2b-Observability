version: '3'
services:

  meu-app-go:
    build:
      context: .
    ports:
      - "8090:8090"
    networks:
      - host

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus/prometheus_db:/var/lib/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: unless-stopped
    ports:
      - 9090:9090
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 0.5G
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:9090 || exit
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - host

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # Add if you are running on Mac
      # - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    networks:
      - host

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
     - '9093:9093'
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager/alertmanager-data:/data
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      # - '--storage.path=/alertmanager'
    networks:
      - host

  grafana:
    env_file:
      - .env
    image: grafana/grafana
    container_name: grafana
    user: "1000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana/grafana_db:/var/lib/grafana
    depends_on:
      node-exporter:
        condition: service_healthy
      cadvisor:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:3000 || exit
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    ports:
      - 3000:3000
    networks:
      - host

volumes:
  grafana:
  prometheus:

networks:
  backend:
    external: true